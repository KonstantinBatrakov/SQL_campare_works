Базы данных
Практическое задание. Что было сделано в данной работе.

1. Составлено общее текстовое описание БД и решаемых ею задач;
Курсовая работа: 
       - Наименование "База данных нефтяных скважин Безымянного месторождения". 
       - База данных необходима для храенения и накопления в едином формате и в одном месте всех основных параметров скважин месторождения. 
       - Она служит источником для аналитической оценки работы как одной скважины так и месторождения в целом.

2. База данных состоит из 12 таблиц("1. КУРСАЧ.sql");
3. В таблицы добавлены первичные ключи, индексы, внешние ключи;
4. Создана ERDiagram для БД ("ERDiagram для курсовой.mwb"/"Курсач.png");
5. Скрипты наполнены данными с помощью помогатора автонаполнения баз("2. КУРСАЧ_+данные.sql");

Сделаны скрипты обработчики, решающие задачи "3. СКРИПТЫ для курсовой работы.sql":
6. Скрипты характерных выборок (включающие группировки, JOIN'ы, вложенные таблицы)
  Решены 6 задач с JOIN. Написаны названия задач и скрипты примеры:
  -- Задания 1-2. Определить cписок скважин, на которых был хотя бы 1 ГТМ GRP. 
    Вывести по ним id, номер скв, номер куста и отфильтровать по кустам
    2 варианта решение с помощью SELECT и JOIN
  -- Задания 3-4. Подсчитать общее количество данных в MER, для скважин младше 10 лет.
    2 варианта решение с помощью SELECT и JOIN
  -- Задания 3-4. Подсчитать общее количество данных в MER, для скважин младше 10 лет.
    2 варианта решение с помощью SELECT и JOIN
  -- Задание 5. Определить все скважины на которых были оба вида ГТМ GRP и OPZ.
    решение через JOIN
  -- Задание 6. Определить все горизонтальные скважины и № кустовой площадки с глубиной более H_well = 4500м и наличием нефтяного коллектора.

7. Выполнены 2 представления:
-- Cоздать представление, которое выводит все пласты на определенную скважину.
-- Cоздать представление, которое выводит все скважины определенного пласта.

8. Написаны 2 триггера:
-- №1 Триггер для данных hal. Не обновлять обводненность если значение превышает 100
-- Для будущих дат заменять значения на сегодня.


SQL-команды для создания и управления базой данных:

CREATE DATABASE: Создание новой базы данных.
USE: Выбор базы данных для работы.
DROP DATABASE: Удаление существующей базы данных.
CREATE TABLE: Создание новой таблицы в базе данных.
DROP TABLE: Удаление существующей таблицы из базы данных.
ALTER TABLE: Изменение структуры существующей таблицы (добавление ограничений, внешних ключей и т. д.).

Ограничения целостности данных:
PRIMARY KEY: Определение первичного ключа для уникальной идентификации записей в таблице.
FOREIGN KEY: Создание внешнего ключа для связи между таблицами.
UNIQUE: Определение ограничения уникальности для столбца или набора столбцов.
DEFAULT: Задание значения по умолчанию для столбца.
NOT NULL: Ограничение, запрещающее значение NULL для столбца.

SQL-команды для извлечения данных:
SELECT: Выборка данных из таблицы.
COUNT: Подсчет количества записей.
GROUP BY: Группировка результатов выборки по заданному столбцу или выражению.
ORDER BY: Сортировка результатов выборки.

Соединения таблиц и подзапросы:
JOIN: Объединение данных из разных таблиц по заданным условиям.
UNION: Объединение результатов нескольких запросов в один набор данных.
Подзапросы (SELECT внутри другого SELECT): Использование запросов в качестве подзапросов для получения дополнительной информации или фильтрации данных.

Представления и хранимые процедуры:
CREATE VIEW: Создание представления для удобного доступа к данным.
CREATE PROCEDURE: Создание хранимой процедуры для автоматизации и выполнения серии команд SQL.

Триггеры:
CREATE TRIGGER: Создание триггера для автоматического выполнения действий при определенных событиях в базе данных.
Эти функции и команды обеспечивают разнообразные возможности для создания, управления и анализа данных в базе данных.
